{
  "info": {
    "name": "Hotello API Tests",
    "description": "Postman collection for testing Hotello backend API endpoints",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:5000/api",
      "type": "string"
    },
    {
      "key": "auth_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "hotel_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "booking_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Protected Routes",
      "item": [
        {
          "name": "GET /protected",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/protected",
              "host": ["{{base_url}}"],
              "path": ["protected"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has message\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('message');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Hotels",
      "item": [
        {
          "name": "GET /hotels - Get all hotels",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/hotels",
              "host": ["{{base_url}}"],
              "path": ["hotels"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response is an array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "});",
                  "",
                  "if (pm.response.code === 200 && pm.response.json().length > 0) {",
                  "    pm.collectionVariables.set('hotel_id', pm.response.json()[0]._id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "GET /hotels/:id - Get hotel by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/hotels/{{hotel_id}}",
              "host": ["{{base_url}}"],
              "path": ["hotels", "{{hotel_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has required fields\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('name');",
                  "    pm.expect(jsonData).to.have.property('pricePerNight');",
                  "    pm.expect(jsonData).to.have.property('location');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "POST /hotels - Create hotel",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Test Hotel\",\n    \"description\": \"A beautiful test hotel\",\n    \"location\": \"Test City\",\n    \"pricePerNight\": 150,\n    \"amenities\": [\"WiFi\", \"Pool\", \"Gym\"],\n    \"images\": [\n        {\n            \"url\": \"https://example.com/image1.jpg\",\n            \"public_id\": \"test_image_1\"\n        }\n    ]\n}"
            },
            "url": {
              "raw": "{{base_url}}/hotels",
              "host": ["{{base_url}}"],
              "path": ["hotels"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has hotel data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('_id');",
                  "    pm.expect(jsonData).to.have.property('name', 'Test Hotel');",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    pm.collectionVariables.set('hotel_id', pm.response.json()._id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "PUT /hotels/:id - Update hotel",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Updated Test Hotel\",\n    \"pricePerNight\": 200\n}"
            },
            "url": {
              "raw": "{{base_url}}/hotels/{{hotel_id}}",
              "host": ["{{base_url}}"],
              "path": ["hotels", "{{hotel_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has updated data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('name', 'Updated Test Hotel');",
                  "    pm.expect(jsonData).to.have.property('pricePerNight', 200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "DELETE /hotels/:id - Delete hotel",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/hotels/{{hotel_id}}",
              "host": ["{{base_url}}"],
              "path": ["hotels", "{{hotel_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has success message\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('message');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Bookings",
      "item": [
        {
          "name": "POST /bookings - Create booking",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"hotelId\": \"{{hotel_id}}\",\n    \"checkIn\": \"2025-10-20\",\n    \"checkOut\": \"2025-10-22\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/bookings",
              "host": ["{{base_url}}"],
              "path": ["bookings"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has booking data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('_id');",
                  "    pm.expect(jsonData).to.have.property('totalAmount');",
                  "    pm.expect(jsonData).to.have.property('status', 'booked');",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    pm.collectionVariables.set('booking_id', pm.response.json()._id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "GET /bookings/:id - Get booking by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/bookings/{{booking_id}}",
              "host": ["{{base_url}}"],
              "path": ["bookings", "{{booking_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has booking details\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('hotelId');",
                  "    pm.expect(jsonData).to.have.property('checkIn');",
                  "    pm.expect(jsonData).to.have.property('checkOut');",
                  "    pm.expect(jsonData).to.have.property('totalAmount');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    }
  ]
}